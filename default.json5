// Available options:
// https://docs.renovatebot.com/configuration-options/

// NOTE: Renovate only allows comments in .json5 files, but this isn't well-supported by
// Prettier + VS Code. Workaround is to configure tools to treat the file as JSONC
// (in .prettierrc and .vscode/settings.json).
{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",

  // Available presets (see also other pages in the same section): https://docs.renovatebot.com/presets-default/
  // Preset definitions: https://github.com/renovatebot/renovate/tree/main/lib/config/presets/internal
  // Note that there's a `config:base` which we don't use because it tends to pin too many types
  // of deps. (Pinning non-dev dependencies often undesirable, particularly for UI libraries,
  // because it can create a lot of duplicates in the consuming repo. This causes bundle bloat
  // and sometimes even runtime problems.)
  // More info: https://docs.renovatebot.com/dependency-pinning/
  "extends": [
    // Ignore node_modules and anything under common test/fixture directory names
    ":ignoreModulesAndTests",
    // During the Renovate pipeline run, rebase any existing Renovate PRs if the base
    // branch has been updated
    ":rebaseStalePrs",
    // Group known monorepo packages together
    "group:monorepos",
    // Other known groupings (mostly not relevant for node) https://docs.renovatebot.com/presets-group/#grouprecommended
    "group:recommended",
    // Workarounds for known problems with packages https://docs.renovatebot.com/presets-workarounds/#workaroundsall
    "workarounds:all",
    // Make a PR when a vulnerability alert is detected (GitHub only)
    ":enableVulnerabilityAlerts",

    // Local presets
    "github>ecraig12345/renovate-config:newConfigWarningIssue"
  ],

  // Print final config for debugging
  "printConfig": true
}
